//?	Core (WPF2)
//!	Estruturação de páginas e disposição de elementos:

//* Instâncias: extensões da folha de estilos.
@use "vars"		 		as var;
@use "mix" 				as mix;
@use "fun"				as fun;
@use "sass:color"		as color;
@use "sass:math"		as math;

//* Main (Altere como precisar):
*{
	&::selection{
		background: var.$c-t1-800;
		color: var.$c-s-1;
	}

	::-webkit-scrollbar-track {
		background: #f1f1f1; 
	}

	::-webkit-scrollbar-thumb {
		background: #888;

		&:hover{
			background: #555; 
		} 
	}
	
	&::-webkit-scrollbar {
		width: 5px;
	}
}

body{
	background-color: var.$c-bg-1;
	font-family: var.$fnt-1;
	font-weight: var.$wgt-regular;

	overflow-x: hidden;
}

//* Themes: (Altere como precisar)
main{
	display: block;
	width: 100%;
}

.theme{
	&-1{
		background-color: var.$c-bg-1;
	}
	
	&-2{
		// background-color: var.$c-bg-2;
	}
	
	&-3{
		// background-color: var.$c-bg-3;
	}
}

//* Areas (Altere como precisar):
.max-area{
	max-width: var.$pg-maxwidth;
	
	display: flex;
	justify-content: center;
	flex-direction: column;
	margin: 0 auto;

	@include mix.responsive(){
		width: 100%;
	}
}

//! NÃO ALTERE NADA A PARTIR DESTE PONTO A MENOS QUE SAIBA O QUE ESTÁ FAZENDO!
.hidden{
	display: none!important;
}

//* Positioning:
.glued{
	overflow: hidden!important;
}

.relative{
	position: relative!important;
}

.absolute{
	position: absolute!important;
}

//* Text Orientation:
.t-left			{text-align: left}
.t-center		{text-align: center}
.t-right		{text-align: right}
.t-justify		{text-align: justify}

//* Padding:
.p{
	//? General
	@for $p from 1 through 5{
		&-#{$p}{
			padding: #{$p * 1%};
		}
	}

	@for $p from 1 through 100{
		&-#{$p}px{
			padding: #{$p * 1px};
		}
	}

	@for $p from 1 through 30{
		&-#{$p}r{
			padding: #{$p * 1rem};
		}
	}

	&-a{
		padding: auto;
	}

	&-0{
		padding: none!important;
	}
	
	//? Y-Axis
	&y{
		@for $py from 1 through 5{
			&-#{$py}{
				padding-top: #{$py * 1%};
				padding-bottom: #{$py * 1%};
			}
		}
		
		@for $py from 1 through 100{
			&-#{$py}px{
				padding-top: #{$py * 1px};
				padding-bottom: #{$py * 1px};
			}
		}
		
		@for $py from 1 through 15{
			&-#{$py}r{
				padding-top: #{$py * 1rem};
				padding-bottom: #{$py * 1rem};
			}
		}

		&-a{
			padding-top: auto;
			padding-bottom: auto;
		}	
		
		&-0{
			padding-top: none;
			padding-bottom: none;
		}
	}
	
	//? X-Axis
	&x{
		@for $px from 1 through 5{
			&-#{$px}{
				padding-left: #{$px * 1%};
				padding-right: #{$px * 1%};
			}
		}

		@for $px from 1 through 100{
			&-#{$px}px{
				padding-left: #{$px * 1px};
				padding-right: #{$px * 1px};
			}
		}

		@for $px from 1 through 15{
			&-#{$px}r{
				padding-left: #{$px * 1rem};
				padding-right: #{$px * 1rem};
			}
		}

		&-a{
			padding-left: auto;
			padding-right: auto;
		}	
		
		&-0{
			padding-left: none;
			padding-right: none;
		}
	}
	
	//? Top
	&t{
		@for $mt from 1 through 5{
			&-#{$mt}{
				padding-top: #{$mt * 1%};
			}
		}
		
		@for $mt from 1 through 100{
			&-#{$mt}px{
				padding-top: #{$mt * 1px};
			}
		}
		
		@for $mt from 1 through 15{
			&-#{$mt}r{
				padding-top: #{$mt * 1rem};
			}
		}

		&-a{
			padding-top: auto;
		}	
		
		&-0{
			padding-top: none;
		}	
	}

	//? Right
	&r{
		@for $pr from 1 through 5{
			&-#{$pr}{
				padding-right: #{$pr * 1%};
			}
		}
		
		@for $pr from 1 through 100{
			&-#{$pr}px{
				padding-right: #{$pr * 1px};
			}
		}
		
		@for $pr from 1 through 15{
			&-#{$pr}r{
				padding-right: #{$pr * 1rem};
			}
		}

		&-a{
			padding-right: auto;
		}	
		
		&-0{
			padding-right: none;
		}	
	}
	
	//? Bottom
	&b{
		@for $pb from 1 through 5{
			&-#{$pb}{
				padding-bottom: #{$pb * 1%};
			}
		}

		@for $pb from 1 through 100{
			&-#{$pb}px{
				padding-bottom: #{$pb * 1px};
			}
		}

		@for $pb from 1 through 15{
			&-#{$pb}r{
				padding-bottom: #{$pb * 1rem};
			}
		}

		&-a{
			padding-bottom: auto;
		}	
		
		&-0{
			padding-bottom: none;
		}	
	}
	
	//? Left
	&l{
		@for $pl from 1 through 5{
			&-#{$pl}{
				padding-left: #{$pl * 1%};
			}
		}

		@for $pl from 1 through 100{
			&-#{$pl}px{
				padding-left: #{$pl * 1px};
			}
		}

		@for $pl from 1 through 15{
			&-#{$pl}r{
				padding-left: #{$pl * 1rem};
			}
		}

		&-a{
			padding-left: auto;
		}	
		
		&-0{
			padding-left: none;
		}	
	}
}

//* Margem
.m{
	//? General
	@for $m from 1 through 5{
		&-#{$m}{
			margin: #{$m * 1%};
		}
	}

	@for $m from 1 through 100{
		&-#{$m}px{
			margin: #{$m * 1px};
		}
	}

	@for $m from 1 through 15{
		&-#{$m}r{
			margin: #{$m * 1rem};
		}
	}

	&-a{
		margin: auto;
	}
	
	&-0{
		margin: none!important;
	}
	
	//? Y-Axis
	&y{
		@for $my from 1 through 5{
			&-#{$my}{
				margin-top: #{$my * 1%};
				margin-bottom: #{$my * 1%};
			}
		}
		
		@for $my from 1 through 100{
			&-#{$my}px{
				margin-top: #{$my * 1px};
				margin-bottom: #{$my * 1px};
			}
		}
		
		@for $my from 1 through 15{
			&-#{$my}r{
				margin-top: #{$my * 1rem};
				margin-bottom: #{$my * 1rem};
			}
		}

		&-a{
			margin-top: auto;
			margin-bottom: auto;
		}	
		
		&-0{
			margin-top: none;
			margin-bottom: none;
		}
	}
	
	//? X-Axis
	&x{
		@for $mx from 1 through 5{
			&-#{$mx}{
				margin-left: #{$mx * 1%};
				margin-right: #{$mx * 1%};
			}
		}

		@for $mx from 1 through 100{
			&-#{$mx}px{
				margin-left: #{$mx * 1px};
				margin-right: #{$mx * 1px};
			}
		}

		@for $mx from 1 through 15{
			&-#{$mx}r{
				margin-left: #{$mx * 1rem};
				margin-right: #{$mx * 1rem};
			}
		}

		&-a{
			margin-left: auto;
			margin-right: auto;
		}	
		
		&-0{
			margin-left: none;
			margin-right: none;
		}
	}

	//? Top
	&t{
		@for $mt from 1 through 5{
			&-#{$mt}{
				margin-top: #{$mt * 1%};
			}
		}

		@for $mt from 1 through 100{
			&-#{$mt}px{
				margin-top: #{$mt * 1px};
			}
		}

		@for $mt from 1 through 15{
			&-#{$mt}r{
				margin-top: #{$mt * 1rem};
			}
		}

		&-a{
			margin-top: auto;
		}	
		
		&-0{
			margin-top: none;
		}	
	}

	//? Right
	&r{
		@for $mr from 1 through 100{
			&-#{$mr}{
				margin-right: #{$mr * 1%};
			}
		}
		
		@for $mr from 1 through 100{
			&-#{$mr}px{
				margin-right: #{$mr * 1px};
			}
		}
		
		@for $mr from 1 through 100{
			&-#{$mr}r{
				margin-right: #{$mr * 1rem};
			}
		}

		&-a{
			margin-right: auto;
		}	
		
		&-0{
			margin-right: none;
		}	
	}
	
	//? Bottom
	&b{
		@for $mb from 1 through 5{
			&-#{$mb}{
				margin-bottom: #{$mb * 1%};
			}
		}
		
		@for $mb from 1 through 100{
			&-#{$mb}px{
				margin-bottom: #{$mb * 1px};
			}
		}
		
		@for $mb from 1 through 15{
			&-#{$mb}r{
				margin-bottom: #{$mb * 1rem};
			}
		}

		&-a{
			margin-bottom: auto;
		}	
		
		&-0{
			margin-bottom: none;
		}	
	}
	
	//? Left
	&l{
		@for $ml from 1 through 5{
			&-#{$ml}{
				margin-left: #{$ml * 1%};
			}
		}
		
		@for $ml from 1 through 100{
			&-#{$ml}px{
				margin-left: #{$ml * 1px};
			}
		}
		
		@for $ml from 1 through 15{
			&-#{$ml}r{
				margin-left: #{$ml * 1rem};
			}
		}

		&-a{
			margin-left: auto;
		}	
		
		&-0{
			margin-left: none;
		}	
	}
}

//* Linhas/Colunas:
.flex{
	display: flex;
	box-sizing: border-box;
	align-items: center;

	//* Orientação linha/coluna:
	&.row{
		flex-direction: row;
		&-r {flex-direction: row-reverse}

		//*	Alinhamento vertical (elemento mãe):
		&.v{
			&-top		{align-items: flex-start}
			&-center	{align-items: center}
			&-bottom	{align-items: flex-end}
			&-stretch	{align-items: stretch}
		}

		//*	Alinhamento horizontal (elemento mãe):
		&.h{
			&-left		{justify-content: flex-start}
			&-center	{justify-content: center}
			&-right		{justify-content: flex-end}
			&-between	{justify-content: space-between}
			&-around	{justify-content: space-around}
			&-evenly	{justify-content: space-evenly}
		}
	}
	
	&.col{
		flex-direction: column;
		&-r {flex-direction: column-reverse}

		//*	Alinhamento vertical (elemento mãe):
		&.v{
			&-top		{justify-content: flex-start}
			&-center	{justify-content: center}
			&-bottom	{justify-content: flex-end}
			&-between	{justify-content: space-between}
			&-around	{justify-content: space-around}
			&-evenly	{justify-content: space-evenly}
		}

		//*	Alinhamento horizontal (elemento mãe):
		&.h{
			&-left		{align-items: flex-start}
			&-center	{align-items: center}
			&-right		{align-items: flex-end}
			&-stretch	{align-items: stretch}
		}
	}
	
	//*	Alinhamento vertical/horizontal (elemento filho):
	& .vs{
		&-top		{justify-self: flex-start}
		&-center	{justify-self: center}
		&-bottom	{justify-self: flex-end}
		&-stretch	{justify-self: stretch}
	}

	& .hs{
		&-left		{align-self: flex-start}
		&-center	{align-self: center}
		&-right		{align-self: flex-end}
		&-stretch	{align-self: stretch}
	}

	//* Disposição de conteúdo:
	&.wrap		{flex-wrap: wrap;}
	&.no-wrap	{flex-wrap: nowrap;}
	&.wrap-r	{flex-wrap: wrap-reverse;}

	//* Espaçamentos entre elementos (elemento mãe):
	&.gap, & .gap{
		@for $g from 1 through 5{
			&-#{$g}{
				gap: #{$g * 1%};
			}
		}
		
		@for $g from 1 through 100{
			&-#{$g}px{
				gap: #{$g * 1px};
			}
		}
		
		@for $g from 1 through 15{
			&-#{$g}r{
				gap: #{$g * 1rem};
			}
		}
	}

	//* Crescimento de elementos (elemento filho):
	& .grow{
		@for $g from 1 through 10{
			&-#{$g}{
				flex-grow: #{$g};
			}
		}
	}

	//* Tamanhos:
	& .w{
		@for $w from 1 through 18{
			$v: $w * 5;
			&#{$v}{
				width: #{$v * 1%};
				
				@for $p from 1 through 5{
					&-#{$p}{
						width: #{($v - $p) * 1%};
						margin-left: #{$p * 1%};
						margin-right: #{$p * 1%};

						@include mix.responsive(){
							&:not(.ignore-breakpoint){
								width: 100%;
							}
						}
					}
				}
			}
		}
		
		@for $w from 1 through 20{
			&#{$w}r{
				width: #{$w * 1rem};
				
				@for $p from 1 through 5{
					&-#{$p}{
						width: #{($w - $p) * 1rem};
						margin-left: #{$p * 1rem};
						margin-right: #{$p * 1rem};

						@include mix.responsive(){
							&:not(.ignore-breakpoint){
								width: 100%;
							}
						}
					}
				}
			}
		}
		
		@for $w from 1 through 20{
			$v: $w * 5;
			&#{$v}{
				width: #{$v * 1px};
				
				@for $p from 1 through 5{
					&-#{$p}{
						width: #{($v - $p) * 1px};
						margin-left: #{$p * 1px};
						margin-right: #{$p * 1px};

						@include mix.responsive(){
							&:not(.ignore-breakpoint){
								width: 100%;
							}
						}
					}
				}
			}
		}
	}
}

.grid{
	display: grid;

	//* Definições de tamanhos em linhas/colunas:
	&.row{
		@for $row from 1 through 10{
			&-#{$row}{
				grid-template-rows: repeat(#{$row}, 1fr);
			}
		}
	}
	
	&.col{
		@for $col from 1 through 10{
			&-#{$col}{
				grid-template-columns: repeat(#{$col}, 1fr);
			}
		}
	}

	//* Definições da alimentação de conteúdo (elemento mãe):
	&.flow
	{
		&-row	{grid-auto-flow: row;}
		&-col	{grid-auto-flow: column;}
		
		&-dense	{
			grid-auto-flow: dense;

			&-row	{grid-auto-flow: row dense;}
			&-col	{grid-auto-flow: column dense;}
		}
	}

	//* Espaçamento entre elementos (elemento mãe):
	&.gap{
		&-r{
			@for $g from 1 through 5{
				&-#{$g}{
					grid-row-gap: #{$g * 1%};
				}
			}
			
			@for $g from 1 through 100{
				&-#{$g}px{
					grid-row-gap: #{$g * 1px};
				}
			}
			
			@for $g from 1 through 15{
				&-#{$g}r{
					grid-row-gap: #{$g * 1rem};
				}
			}
		}
		
		&-c{
			@for $g from 1 through 5{
				&-#{$g}{
					grid-column-gap: #{$g * 1%};
				}
			}
			
			@for $g from 1 through 100{
				&-#{$g}px{
					grid-column-gap: #{$g * 1px};
				}
			}
			
			@for $g from 1 through 15{
				&-#{$g}r{
					grid-column-gap: #{$g * 1rem};
				}
			}
		}
	}


}

.contents{
	display: contents;
}

//* Vídeos e Imagens:
.iframe{
	&-16x9{
		aspect-ratio: 16 / 9;
		width: 100%;
	}
	
	&-4x3{
		aspect-ratio: 4 / 3;
		width: 100%;
	}
}

img{
	max-width:100%;
}

//* Float:
.clear{
	clear: both;
}

/* Classes que ocultam conteudo pelo tipo de tela: */
@media (min-width: 1024px){
	.mobile{
		display: none!important;
	}
}

@media (min-width: 0px) and (max-width: 1023px)
{
	.desktop{
		display: none!important;
	}
}