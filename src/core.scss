//?	Core (WPF2)
//!	Estruturação de páginas e disposição de elementos:

//* Instâncias: extensões da folha de estilos.
@use "vars"		 		as var;
@use "mix" 				as mix;
@use "fun"				as fun;
@use "sass:color"		as color;
@use "sass:math"		as math;

//* Main (Altere como precisar):
*{
	&::selection{
		background: var.$c-t1-800;
		color: var.$c-s-1;
	}

	::-webkit-scrollbar-track {
		background: var.$c-bg-4; 
	}

	::-webkit-scrollbar-thumb {
		background: var.$c-s-3;

		&:hover{
			background: var.$c-s-4; 
		} 
	}
	
	&::-webkit-scrollbar {
		width: 5px;
		height: 5px;
	}
}

body{
	background-color: var.$c-bg-2;
	font-family: var.$fnt-1;
	font-weight: var.$wgt-regular;
	cursor: var.$mc-auto;

	position: relative;
	overflow-x: hidden;

	&.inactive{
		overflow: none;

		&:after{
			@include mix.setAbsolute(0, 0);	
			
			content: '';
			background: rgba(0, 0, 0, 0.5);
			width: 100%;
			height: 100%;
			z-index: 9;
		}
	}

	@include mix.responsive()
	{
		.mob\:inactive{
			overflow: none;

			&:after{
				@include mix.setAbsolute(0, 0);	
				
				content: '';
				background: rgba(0, 0, 0, 0.5);
				width: 100%;
				height: 100%;
				z-index: 9;
			}
		}
	}
}

//* Themes: (Altere como precisar)
main{
	display: block;
	width: 100%;
}

.theme{
	&-1{
		background-color: var.$c-bg-1;
	}
	
	&-2{
		// background-color: var.$c-bg-2;
	}
	
	&-3{
		// background-color: var.$c-bg-3;
	}
}

@include mix.responsive()
{
	.mob\:theme{
		&-1{
			background-color: var.$c-bg-1;
		}
		
		&-2{
			// background-color: var.$c-bg-2;
		}
		
		&-3{
			// background-color: var.$c-bg-3;
		}
	}
}

//* Areas (Altere como precisar):
.max-area{
	max-width: var.$pg-maxwidth;
	
	display: flex;
	justify-content: center;
	flex-direction: column;
	margin: 0 auto;

	@include mix.responsive(){
		width: 100%;
	}
}

//! NÃO ALTERE NADA A PARTIR DESTE PONTO A MENOS QUE SAIBA O QUE ESTÁ FAZENDO!
.hidden{
	display: none!important;
}

@include mix.responsive()
{
	.mob\:hidden{
		display: none!important;
	}
}

//* Cursores:
.mc{
	&-auto{
		cursor: auto;
	}

	&-pointer{
		cursor: pointer;
	}

	&-help{
		cursor: context-menu;
	}

	&-grab{
		cursor: grab;
	}

	&-grabbed{
		cursor: grabbing;
	}

	&-text{
		cursor: text;
	}

	&-zoom-in{
		cursor: zoom-in;
	}

	&-zoom-out{
		cursor: zoom-out;
	}

	&-resize{
		cursor: nwse-resize;
	}
}

//* Positioning:
.glued, .overflow-hidden{
	overflow: hidden!important;
}

.relative{
	position: relative!important;
}

.absolute{
	position: absolute!important;
}

.fixed{
	position: fixed!important;
}

@include mix.responsive()
{
	.mob\:{
		&glued, 
		&overflow-hidden{
			overflow: hidden!important;
		}

		&relative{
			position: relative!important;
		}

		&absolute{
			position: absolute!important;
		}

		&fixed{
			position: fixed!important;
		}
	}
}

//* Text Orientation:
.t-left			{text-align: left}
.t-center		{text-align: center}
.t-right		{text-align: right}
.t-justify		{text-align: justify}

@include mix.responsive()
{
	.mob\:{
		&t-left			{text-align: left}
		&t-center		{text-align: center}
		&t-right		{text-align: right}
		&t-justify		{text-align: justify}
	}
}

//* Padding:
.p{
	//? General
	@for $p from 1 through 5{
		&-#{$p}{
			padding: #{$p * 1%};
		}
	}

	@for $p from 1 through 300{
		&-#{$p}px{
			padding: #{$p * 1px};
		}
	}

	@for $p from 1 through 30{
		&-#{$p}r{
			padding: #{$p * 1rem};
		}
	}

	&-a, &-auto{
		padding: auto;
	}

	&-0{
		padding: 0!important;
	}
	
	//? Y-Axis
	&y{
		@for $py from 1 through 5{
			&-#{$py}{
				padding-top: #{$py * 1%};
				padding-bottom: #{$py * 1%};
			}
		}
		
		@for $py from 1 through 300{
			&-#{$py}px{
				padding-top: #{$py * 1px};
				padding-bottom: #{$py * 1px};
			}
		}
		
		@for $py from 1 through 15{
			&-#{$py}r{
				padding-top: #{$py * 1rem};
				padding-bottom: #{$py * 1rem};
			}
		}

		&-a, &-auto{
			padding-top: auto;
			padding-bottom: auto;
		}	
		
		&-0{
			padding-top: 0;
			padding-bottom: 0;
		}
	}
	
	//? X-Axis
	&x{
		@for $px from 1 through 5{
			&-#{$px}{
				padding-left: #{$px * 1%};
				padding-right: #{$px * 1%};
			}
		}

		@for $px from 1 through 300{
			&-#{$px}px{
				padding-left: #{$px * 1px};
				padding-right: #{$px * 1px};
			}
		}

		@for $px from 1 through 15{
			&-#{$px}r{
				padding-left: #{$px * 1rem};
				padding-right: #{$px * 1rem};
			}
		}

		&-a, &-auto{
			padding-left: auto;
			padding-right: auto;
		}	
		
		&-0{
			padding-left: 0;
			padding-right: 0;
		}
	}
	
	//? Top
	&t{
		@for $mt from 1 through 5{
			&-#{$mt}{
				padding-top: #{$mt * 1%};
			}
		}
		
		@for $mt from 1 through 300{
			&-#{$mt}px{
				padding-top: #{$mt * 1px};
			}
		}
		
		@for $mt from 1 through 15{
			&-#{$mt}r{
				padding-top: #{$mt * 1rem};
			}
		}

		&-a, &-auto{
			padding-top: auto;
		}	
		
		&-0{
			padding-top: 0;
		}	
	}

	//? Right
	&r{
		@for $pr from 1 through 5{
			&-#{$pr}{
				padding-right: #{$pr * 1%};
			}
		}
		
		@for $pr from 1 through 300{
			&-#{$pr}px{
				padding-right: #{$pr * 1px};
			}
		}
		
		@for $pr from 1 through 15{
			&-#{$pr}r{
				padding-right: #{$pr * 1rem};
			}
		}

		&-a, &-auto{
			padding-right: auto;
		}	
		
		&-0{
			padding-right: 0;
		}	
	}
	
	//? Bottom
	&b{
		@for $pb from 1 through 5{
			&-#{$pb}{
				padding-bottom: #{$pb * 1%};
			}
		}

		@for $pb from 1 through 300{
			&-#{$pb}px{
				padding-bottom: #{$pb * 1px};
			}
		}

		@for $pb from 1 through 15{
			&-#{$pb}r{
				padding-bottom: #{$pb * 1rem};
			}
		}

		&-a, &-auto{
			padding-bottom: auto;
		}	
		
		&-0{
			padding-bottom: 0;
		}	
	}
	
	//? Left
	&l{
		@for $pl from 1 through 5{
			&-#{$pl}{
				padding-left: #{$pl * 1%};
			}
		}

		@for $pl from 1 through 300{
			&-#{$pl}px{
				padding-left: #{$pl * 1px};
			}
		}

		@for $pl from 1 through 15{
			&-#{$pl}r{
				padding-left: #{$pl * 1rem};
			}
		}

		&-a, &-auto{
			padding-left: auto;
		}	
		
		&-0{
			padding-left: 0;
		}	
	}
}

@include mix.responsive()
{
	.mob\:p{
		//? General
		@for $p from 1 through 5{
			&-#{$p}{
				padding: #{$p * 1%};
			}
		}

		@for $p from 1 through 100{
			&-#{$p}px{
				padding: #{$p * 1px};
			}
		}

		@for $p from 1 through 30{
			&-#{$p}r{
				padding: #{$p * 1rem};
			}
		}

		&-a, &-auto{
			padding: auto;
		}

		&-0{
			padding: 0!important;
		}
		
		//? Y-Axis
		&y{
			@for $py from 1 through 5{
				&-#{$py}{
					padding-top: #{$py * 1%};
					padding-bottom: #{$py * 1%};
				}
			}
			
			@for $py from 1 through 100{
				&-#{$py}px{
					padding-top: #{$py * 1px};
					padding-bottom: #{$py * 1px};
				}
			}
			
			@for $py from 1 through 15{
				&-#{$py}r{
					padding-top: #{$py * 1rem};
					padding-bottom: #{$py * 1rem};
				}
			}

			&-a, &-auto{
				padding-top: auto;
				padding-bottom: auto;
			}	
			
			&-0{
				padding-top: 0;
				padding-bottom: 0;
			}
		}
		
		//? X-Axis
		&x{
			@for $px from 1 through 5{
				&-#{$px}{
					padding-left: #{$px * 1%};
					padding-right: #{$px * 1%};
				}
			}

			@for $px from 1 through 100{
				&-#{$px}px{
					padding-left: #{$px * 1px};
					padding-right: #{$px * 1px};
				}
			}

			@for $px from 1 through 15{
				&-#{$px}r{
					padding-left: #{$px * 1rem};
					padding-right: #{$px * 1rem};
				}
			}

			&-a, &-auto{
				padding-left: auto;
				padding-right: auto;
			}	
			
			&-0{
				padding-left: 0;
				padding-right: 0;
			}
		}
		
		//? Top
		&t{
			@for $mt from 1 through 5{
				&-#{$mt}{
					padding-top: #{$mt * 1%};
				}
			}
			
			@for $mt from 1 through 100{
				&-#{$mt}px{
					padding-top: #{$mt * 1px};
				}
			}
			
			@for $mt from 1 through 15{
				&-#{$mt}r{
					padding-top: #{$mt * 1rem};
				}
			}

			&-a, &-auto{
				padding-top: auto;
			}	
			
			&-0{
				padding-top: 0;
			}	
		}

		//? Right
		&r{
			@for $pr from 1 through 5{
				&-#{$pr}{
					padding-right: #{$pr * 1%};
				}
			}
			
			@for $pr from 1 through 100{
				&-#{$pr}px{
					padding-right: #{$pr * 1px};
				}
			}
			
			@for $pr from 1 through 15{
				&-#{$pr}r{
					padding-right: #{$pr * 1rem};
				}
			}

			&-a, &-auto{
				padding-right: auto;
			}	
			
			&-0{
				padding-right: 0;
			}	
		}
		
		//? Bottom
		&b{
			@for $pb from 1 through 5{
				&-#{$pb}{
					padding-bottom: #{$pb * 1%};
				}
			}

			@for $pb from 1 through 100{
				&-#{$pb}px{
					padding-bottom: #{$pb * 1px};
				}
			}

			@for $pb from 1 through 15{
				&-#{$pb}r{
					padding-bottom: #{$pb * 1rem};
				}
			}

			&-a, &-auto{
				padding-bottom: auto;
			}	
			
			&-0{
				padding-bottom: 0;
			}	
		}
		
		//? Left
		&l{
			@for $pl from 1 through 5{
				&-#{$pl}{
					padding-left: #{$pl * 1%};
				}
			}

			@for $pl from 1 through 100{
				&-#{$pl}px{
					padding-left: #{$pl * 1px};
				}
			}

			@for $pl from 1 through 15{
				&-#{$pl}r{
					padding-left: #{$pl * 1rem};
				}
			}

			&-a, &-auto{
				padding-left: auto;
			}	
			
			&-0{
				padding-left: 0;
			}	
		}
	}
}

//* Margem
.m{
	//? General
	@for $m from 1 through 5{
		&-#{$m}{
			margin: #{$m * 1%};
		}
	}

	@for $m from 1 through 300{
		&-#{$m}px{
			margin: #{$m * 1px};
		}
	}

	@for $m from 1 through 15{
		&-#{$m}r{
			margin: #{$m * 1rem};
		}
	}

	&-a, &-auto{
		margin: auto;
	}
	
	&-0{
		margin: 0!important;
	}
	
	//? Y-Axis
	&y{
		@for $my from 1 through 5{
			&-#{$my}{
				margin-top: #{$my * 1%};
				margin-bottom: #{$my * 1%};
			}
		}
		
		@for $my from 1 through 300{
			&-#{$my}px{
				margin-top: #{$my * 1px};
				margin-bottom: #{$my * 1px};
			}
		}
		
		@for $my from 1 through 15{
			&-#{$my}r{
				margin-top: #{$my * 1rem};
				margin-bottom: #{$my * 1rem};
			}
		}

		&-a, &-auto{
			margin-top: auto;
			margin-bottom: auto;
		}	
		
		&-0{
			margin-top: 0;
			margin-bottom: 0;
		}
	}
	
	//? X-Axis
	&x{
		@for $mx from 1 through 5{
			&-#{$mx}{
				margin-left: #{$mx * 1%};
				margin-right: #{$mx * 1%};
			}
		}

		@for $mx from 1 through 300{
			&-#{$mx}px{
				margin-left: #{$mx * 1px};
				margin-right: #{$mx * 1px};
			}
		}

		@for $mx from 1 through 15{
			&-#{$mx}r{
				margin-left: #{$mx * 1rem};
				margin-right: #{$mx * 1rem};
			}
		}

		&-a, &-auto{
			margin-left: auto;
			margin-right: auto;
		}	
		
		&-0{
			margin-left: 0;
			margin-right: 0;
		}
	}

	//? Top
	&t{
		@for $mt from 1 through 5{
			&-#{$mt}{
				margin-top: #{$mt * 1%};
			}
		}

		@for $mt from 1 through 300{
			&-#{$mt}px{
				margin-top: #{$mt * 1px};
			}
		}

		@for $mt from 1 through 15{
			&-#{$mt}r{
				margin-top: #{$mt * 1rem};
			}
		}

		&-a, &-auto{
			margin-top: auto;
		}	
		
		&-0{
			margin-top: 0;
		}	
	}

	//? Right
	&r{
		@for $mr from 1 through 100{
			&-#{$mr}{
				margin-right: #{$mr * 1%};
			}
		}
		
		@for $mr from 1 through 300{
			&-#{$mr}px{
				margin-right: #{$mr * 1px};
			}
		}
		
		@for $mr from 1 through 100{
			&-#{$mr}r{
				margin-right: #{$mr * 1rem};
			}
		}

		&-a, &-auto{
			margin-right: auto;
		}	
		
		&-0{
			margin-right: 0;
		}	
	}
	
	//? Bottom
	&b{
		@for $mb from 1 through 5{
			&-#{$mb}{
				margin-bottom: #{$mb * 1%};
			}
		}
		
		@for $mb from 1 through 300{
			&-#{$mb}px{
				margin-bottom: #{$mb * 1px};
			}
		}
		
		@for $mb from 1 through 15{
			&-#{$mb}r{
				margin-bottom: #{$mb * 1rem};
			}
		}

		&-a, &-auto{
			margin-bottom: auto;
		}	
		
		&-0{
			margin-bottom: 0;
		}	
	}
	
	//? Left
	&l{
		@for $ml from 1 through 5{
			&-#{$ml}{
				margin-left: #{$ml * 1%};
			}
		}
		
		@for $ml from 1 through 300{
			&-#{$ml}px{
				margin-left: #{$ml * 1px};
			}
		}
		
		@for $ml from 1 through 15{
			&-#{$ml}r{
				margin-left: #{$ml * 1rem};
			}
		}

		&-a, &-auto{
			margin-left: auto;
		}	
		
		&-0{
			margin-left: 0;
		}	
	}
}

@include mix.responsive()
{
	.mob\:m{
		//? General
		@for $m from 1 through 5{
			&-#{$m}{
				margin: #{$m * 1%};
			}
		}

		@for $m from 1 through 100{
			&-#{$m}px{
				margin: #{$m * 1px};
			}
		}

		@for $m from 1 through 15{
			&-#{$m}r{
				margin: #{$m * 1rem};
			}
		}

		&-a, &-auto{
			margin: auto;
		}
		
		&-0{
			margin: 0!important;
		}
		
		//? Y-Axis
		&y{
			@for $my from 1 through 5{
				&-#{$my}{
					margin-top: #{$my * 1%};
					margin-bottom: #{$my * 1%};
				}
			}
			
			@for $my from 1 through 100{
				&-#{$my}px{
					margin-top: #{$my * 1px};
					margin-bottom: #{$my * 1px};
				}
			}
			
			@for $my from 1 through 15{
				&-#{$my}r{
					margin-top: #{$my * 1rem};
					margin-bottom: #{$my * 1rem};
				}
			}

			&-a, &-auto{
				margin-top: auto;
				margin-bottom: auto;
			}	
			
			&-0{
				margin-top: 0;
				margin-bottom: 0;
			}
		}
		
		//? X-Axis
		&x{
			@for $mx from 1 through 5{
				&-#{$mx}{
					margin-left: #{$mx * 1%};
					margin-right: #{$mx * 1%};
				}
			}

			@for $mx from 1 through 100{
				&-#{$mx}px{
					margin-left: #{$mx * 1px};
					margin-right: #{$mx * 1px};
				}
			}

			@for $mx from 1 through 15{
				&-#{$mx}r{
					margin-left: #{$mx * 1rem};
					margin-right: #{$mx * 1rem};
				}
			}

			&-a, &-auto{
				margin-left: auto;
				margin-right: auto;
			}	
			
			&-0{
				margin-left: 0;
				margin-right: 0;
			}
		}

		//? Top
		&t{
			@for $mt from 1 through 5{
				&-#{$mt}{
					margin-top: #{$mt * 1%};
				}
			}

			@for $mt from 1 through 100{
				&-#{$mt}px{
					margin-top: #{$mt * 1px};
				}
			}

			@for $mt from 1 through 15{
				&-#{$mt}r{
					margin-top: #{$mt * 1rem};
				}
			}

			&-a, &-auto{
				margin-top: auto;
			}	
			
			&-0{
				margin-top: 0;
			}	
		}

		//? Right
		&r{
			@for $mr from 1 through 100{
				&-#{$mr}{
					margin-right: #{$mr * 1%};
				}
			}
			
			@for $mr from 1 through 100{
				&-#{$mr}px{
					margin-right: #{$mr * 1px};
				}
			}
			
			@for $mr from 1 through 100{
				&-#{$mr}r{
					margin-right: #{$mr * 1rem};
				}
			}

			&-a, &-auto{
				margin-right: auto;
			}	
			
			&-0{
				margin-right: 0;
			}	
		}
		
		//? Bottom
		&b{
			@for $mb from 1 through 5{
				&-#{$mb}{
					margin-bottom: #{$mb * 1%};
				}
			}
			
			@for $mb from 1 through 100{
				&-#{$mb}px{
					margin-bottom: #{$mb * 1px};
				}
			}
			
			@for $mb from 1 through 15{
				&-#{$mb}r{
					margin-bottom: #{$mb * 1rem};
				}
			}

			&-a, &-auto{
				margin-bottom: auto;
			}	
			
			&-0{
				margin-bottom: 0;
			}	
		}
		
		//? Left
		&l{
			@for $ml from 1 through 5{
				&-#{$ml}{
					margin-left: #{$ml * 1%};
				}
			}
			
			@for $ml from 1 through 100{
				&-#{$ml}px{
					margin-left: #{$ml * 1px};
				}
			}
			
			@for $ml from 1 through 15{
				&-#{$ml}r{
					margin-left: #{$ml * 1rem};
				}
			}

			&-a, &-auto{
				margin-left: auto;
			}	
			
			&-0{
				margin-left: 0;
			}	
		}
	}
}

//* Linhas/Colunas:
.contents{
	display: contents;
}

@include mix.responsive()
{
	.mob\:contents{
		display: contents;
	}
}

.block{
	display: block;
}

@include mix.responsive()
{
	.mob\:block{
		display: block;
	}
}

//* Flex & Grid:
.flex, .grid{
	//* Espaçamentos entre elementos (elemento mãe):
	&.gap, & .gap{
		@for $g from 1 through 5{
			&-#{$g}{
				gap: #{$g * 1%};
			}
		}
		
		@for $g from 1 through 100{
			&-#{$g}px{
				gap: #{$g * 1px};
			}
		}
		
		@for $g from 1 through 15{
			&-#{$g}r{
				gap: #{$g * 1rem};
			}
		}
	}

	@include mix.responsive()
	{
		&.mob\:gap, & .mob\:gap{
			@for $g from 1 through 5{
				&-#{$g}{
					gap: #{$g * 1%};
				}
			}
			
			@for $g from 1 through 100{
				&-#{$g}px{
					gap: #{$g * 1px};
				}
			}
			
			@for $g from 1 through 15{
				&-#{$g}r{
					gap: #{$g * 1rem};
				}
			}
		}
	}
}

//* Flex:
.flex{
	display: flex;
	box-sizing: border-box;
	align-items: center;

	//* Orientação linha/coluna:
	&.row{
		flex-direction: row;
		
		&-r{
			flex-direction: row-reverse;

			//*	Alinhamento vertical (elemento mãe reverso):
			&.v{
				&-top		{align-items: flex-start;}
				&-center	{align-items: center;}
				&-bottom	{align-items: flex-end;}
				&-stretch	{align-items: stretch;}
			}

			@include mix.responsive()
			{
				&.mob\:v{
					&-top		{align-items: flex-start;}
					&-center	{align-items: center;}
					&-bottom	{align-items: flex-end;}
					&-stretch	{align-items: stretch;}
				}
			}

			//*	Alinhamento horizontal (elemento mãe reverso):
			&.h{
				&-left		{justify-content: flex-start;}
				&-center	{justify-content: center;}
				&-right		{justify-content: flex-end;}
				&-between	{justify-content: space-between;}
				&-around	{justify-content: space-around;}
				&-evenly	{justify-content: space-evenly;}
			}

			@include mix.responsive()
			{
				&.mob\:h{
					&-left		{justify-content: flex-start;}
					&-center	{justify-content: center;}
					&-right		{justify-content: flex-end;}
					&-between	{justify-content: space-between;}
					&-around	{justify-content: space-around;}
					&-evenly	{justify-content: space-evenly;}
				}
			}
		}

		//*	Alinhamento vertical (elemento mãe):
		&.v{
			&-top		{align-items: flex-start;}
			&-center	{align-items: center;}
			&-bottom	{align-items: flex-end;}
			&-stretch	{align-items: stretch;}
		}

		@include mix.responsive()
		{
			&.mob\:v{
				&-top		{align-items: flex-start;}
				&-center	{align-items: center;}
				&-bottom	{align-items: flex-end;}
				&-stretch	{align-items: stretch;}
			}
		}

		//*	Alinhamento horizontal (elemento mãe):
		&.h{
			&-left		{justify-content: flex-start;}
			&-center	{justify-content: center;}
			&-right		{justify-content: flex-end;}
			&-between	{justify-content: space-between;}
			&-around	{justify-content: space-around;}
			&-evenly	{justify-content: space-evenly;}
		}

		@include mix.responsive()
		{
			&.mob\:h{
				&-left		{justify-content: flex-start;}
				&-center	{justify-content: center;}
				&-right		{justify-content: flex-end;}
				&-between	{justify-content: space-between;}
				&-around	{justify-content: space-around;}
				&-evenly	{justify-content: space-evenly;}
			}
		}
	}

	@include mix.responsive()
	{
		&.mob\:row{
			flex-direction: row;
			
			&-r {
				flex-direction: row-reverse;

				&.mob\:v{
					&-top		{align-items: flex-start;}
					&-center	{align-items: center;}
					&-bottom	{align-items: flex-end;}
					&-stretch	{align-items: stretch;}
				}

				&.mob\:h{
					&-left		{justify-content: flex-start;}
					&-center	{justify-content: center;}
					&-right		{justify-content: flex-end;}
					&-between	{justify-content: space-between;}
					&-around	{justify-content: space-around;}
					&-evenly	{justify-content: space-evenly;}
				}
			}

			&.mob\:v{
				&-top		{align-items: flex-start;}
				&-center	{align-items: center;}
				&-bottom	{align-items: flex-end;}
				&-stretch	{align-items: stretch;}
			}

			&.mob\:h{
				&-left		{justify-content: flex-start;}
				&-center	{justify-content: center;}
				&-right		{justify-content: flex-end;}
				&-between	{justify-content: space-between;}
				&-around	{justify-content: space-around;}
				&-evenly	{justify-content: space-evenly;}
			}
		}
	}
	
	&.col{
		flex-direction: column;
		
		&-r {
			flex-direction: column-reverse;

			//*	Alinhamento vertical (elemento mãe reverso):
			&.v{
				&-top		{justify-content: flex-start;}
				&-center	{justify-content: center;}
				&-bottom	{justify-content: flex-end;}
				&-between	{justify-content: space-between;}
				&-around	{justify-content: space-around;}
				&-evenly	{justify-content: space-evenly;}
			}

			@include mix.responsive()
			{
				&.mob\:v{
					&-top		{justify-content: flex-start;}
					&-center	{justify-content: center;}
					&-bottom	{justify-content: flex-end;}
					&-between	{justify-content: space-between;}
					&-around	{justify-content: space-around;}
					&-evenly	{justify-content: space-evenly;}
				}
			}

			//*	Alinhamento horizontal (elemento mãe reverso):
			&.h{
				&-left		{align-items: flex-start;}
				&-center	{align-items: center;}
				&-right		{align-items: flex-end;}
				&-stretch	{align-items: stretch;}
			}

			@include mix.responsive()
			{
				&.mob\:h{
					&-left		{align-items: flex-start;}
					&-center	{align-items: center;}
					&-right		{align-items: flex-end;}
					&-stretch	{align-items: stretch;}
				}
			}
		}

		//*	Alinhamento vertical (elemento mãe):
		&.v{
			&-top		{justify-content: flex-start;}
			&-center	{justify-content: center;}
			&-bottom	{justify-content: flex-end;}
			&-between	{justify-content: space-between;}
			&-around	{justify-content: space-around;}
			&-evenly	{justify-content: space-evenly;}
		}

		@include mix.responsive()
		{
			&.mob\:v{
				&-top		{justify-content: flex-start;}
				&-center	{justify-content: center;}
				&-bottom	{justify-content: flex-end;}
				&-between	{justify-content: space-between;}
				&-around	{justify-content: space-around;}
				&-evenly	{justify-content: space-evenly;}
			}
		}

		//*	Alinhamento horizontal (elemento mãe):
		&.h{
			&-left		{align-items: flex-start;}
			&-center	{align-items: center;}
			&-right		{align-items: flex-end;}
			&-stretch	{align-items: stretch;}
		}

		@include mix.responsive()
		{
			&.mob\:h{
				&-left		{align-items: flex-start;}
				&-center	{align-items: center;}
				&-right		{align-items: flex-end;}
				&-stretch	{align-items: stretch;}
			}
		}
	}

	@include mix.responsive()
	{
		&.mob\:col{
			flex-direction: column;
			
			&-r {
				flex-direction: column-reverse;

				&.mob\:v{
					&-top		{justify-content: flex-start;}
					&-center	{justify-content: center;}
					&-bottom	{justify-content: flex-end;}
					&-between	{justify-content: space-between;}
					&-around	{justify-content: space-around;}
					&-evenly	{justify-content: space-evenly;}
				}

				&.mob\:h{
					&-left		{align-items: flex-start;}
					&-center	{align-items: center;}
					&-right		{align-items: flex-end;}
					&-stretch	{align-items: stretch;}
				}
			}

			&.mob\:v{
				&-top		{justify-content: flex-start;}
				&-center	{justify-content: center;}
				&-bottom	{justify-content: flex-end;}
				&-between	{justify-content: space-between;}
				&-around	{justify-content: space-around;}
				&-evenly	{justify-content: space-evenly;}
			}

			&.mob\:h{
				&-left		{align-items: flex-start;}
				&-center	{align-items: center;}
				&-right		{align-items: flex-end;}
				&-stretch	{align-items: stretch;}
			}
		}
	}
	
	//*	Alinhamento vertical/horizontal (elemento filho):
	& .vs{
		&-top		{justify-self: flex-start;}
		&-center	{justify-self: center;}
		&-bottom	{justify-self: flex-end;}
		&-stretch	{justify-self: stretch;}
	}

	@include mix.responsive()
	{
		& .mob\:vs{
			&-top		{justify-self: flex-start;}
			&-center	{justify-self: center;}
			&-bottom	{justify-self: flex-end;}
			&-stretch	{justify-self: stretch;}
		}
	}

	& .hs{
		&-left		{align-self: flex-start;}
		&-center	{align-self: center;}
		&-right		{align-self: flex-end;}
		&-stretch	{align-self: stretch;}
	}

	@include mix.responsive()
	{
		& .mob\:hs{
			&-left		{align-self: flex-start;}
			&-center	{align-self: center;}
			&-right		{align-self: flex-end;}
			&-stretch	{align-self: stretch;}
		}	
	}

	//* Disposição de conteúdo:
	&.wrap		{flex-wrap: wrap;}
	&.no-wrap	{flex-wrap: nowrap;}
	&.wrap-r	{flex-wrap: wrap-reverse;}

	@include mix.responsive()
	{
		&.mob\:wrap		{flex-wrap: wrap;}
		&.mob\:no-wrap	{flex-wrap: nowrap;}
		&.mob\:wrap-r	{flex-wrap: wrap-reverse;}
	}

	//* Ordenação de elementos Flex:
	.order{
		@for $o from 1 through 100{
			&-#{$o}{
				order: #{$o};
			}
		}
	}

	@include mix.responsive()
	{
		.mob\:order{
			@for $o from 1 through 100{
				&-#{$o}{
					order: #{$o};
				}
			}
		}
	}

	//* Crescimento de elementos (elemento filho):
	.grow{
		@for $g from 1 through 10{
			&-#{$g}{
				flex-grow: #{$g};
			}
		}
	}
}

//* Grid:
.grid{
	display: grid;

	//*	Alinhamento vertical (elemento mãe):
	&.v{
		&-top		{align-items: start}
		&-center	{align-items: start}
		&-bottom	{align-items: end}
		&-stretch	{align-items: stretch}	
		&-baseline	{align-items: baseline}
	}

	@include mix.responsive()
	{
		.mob\:v{
			&-top		{align-items: start}
			&-center	{align-items: start}
			&-bottom	{align-items: end}
			&-stretch	{align-items: stretch}	
			&-baseline	{align-items: baseline}
		}
	}

	//*	Alinhamento horizontal (elemento mãe):
	&.h{
		&-left		{justify-content: start}
		&-center	{justify-content: center}
		&-right		{justify-content: end}
		&-between	{justify-content: space-between}
	}

	@include mix.responsive()
	{
		.mob\:h{
			&-left		{justify-content: start}
			&-center	{justify-content: center}
			&-right		{justify-content: end}
			&-between	{justify-content: space-between}
		}
	}

	//* Definições de tamanhos em linhas/colunas:
	&.row{
		@for $row from 1 through 30{
			&-#{$row}{
				grid-template-rows: repeat(#{$row}, minmax(0, 1fr));
			}
		}
	}

	@include mix.responsive()
	{
		&.mob\:row{
			@for $row from 1 through 30{
				&-#{$row}{
					grid-template-rows: repeat(#{$row}, minmax(0, 1fr));
				}
			}
		}
	}
	
	&.col{
		@for $col from 1 through 30{
			&-#{$col}{
				grid-template-columns: repeat(#{$col}, minmax(0, 1fr));
			}
		}
	}

	@include mix.responsive()
	{
		&.mob\:col{
			@for $col from 1 through 30{
				&-#{$col}{
					grid-template-columns: repeat(#{$col}, minmax(0, 1fr));
				}
			}
		}
	}

	//* Definições de atribuição de proporções:
	.span{
		&-col{
			@for $span from 1 through 3{
				&-#{$span}{
					grid-column: span #{$span};
				}
			}
		}
		
		&-row{
			@for $span from 1 through 3{
				&-#{$span}{
					grid-row: span #{$span};
				}
			}
		}
	}

	@include mix.responsive()
	{
		.mob\:span{
			&-col{
				@for $span from 1 through 3{
					&-#{$span}{
						grid-column: span #{$span};
					}
				}
			}
			
			&-row{
				@for $span from 1 through 3{
					&-#{$span}{
						grid-row: span #{$span};
					}
				}
			}
		}
	}

	//* Definições da alimentação de conteúdo (elemento mãe):
	&.flow{
		&-row	{grid-auto-flow: row;}
		&-col	{grid-auto-flow: column;}
		
		&-dense	{
			grid-auto-flow: dense;

			&-row	{grid-auto-flow: row dense;}
			&-col	{grid-auto-flow: column dense;}
		}
	}

	@include mix.responsive()
	{
		&.mob\:flow{
			&-row	{grid-auto-flow: row;}
			&-col	{grid-auto-flow: column;}
			
			&-dense	{
				grid-auto-flow: dense;

				&-row	{grid-auto-flow: row dense;}
				&-col	{grid-auto-flow: column dense;}
			}
		}
	}

	//* Espaçamento entre elementos (elemento mãe):
	&.gap{
		&-r{
			@for $g from 1 through 5{
				&-#{$g}{
					grid-row-gap: #{$g * 1%};
				}
			}
			
			@for $g from 1 through 100{
				&-#{$g}px{
					grid-row-gap: #{$g * 1px};
				}
			}
			
			@for $g from 1 through 15{
				&-#{$g}r{
					grid-row-gap: #{$g * 1rem};
				}
			}
		}
		
		&-c{
			@for $g from 1 through 5{
				&-#{$g}{
					grid-column-gap: #{$g * 1%};
				}
			}
			
			@for $g from 1 through 100{
				&-#{$g}px{
					grid-column-gap: #{$g * 1px};
				}
			}
			
			@for $g from 1 through 15{
				&-#{$g}r{
					grid-column-gap: #{$g * 1rem};
				}
			}
		}
	}

	@include mix.responsive()
	{
		&.mob\:gap{
			&-r{
				@for $g from 1 through 5{
					&-#{$g}{
						grid-row-gap: #{$g * 1%};
					}
				}
				
				@for $g from 1 through 100{
					&-#{$g}px{
						grid-row-gap: #{$g * 1px};
					}
				}
				
				@for $g from 1 through 15{
					&-#{$g}r{
						grid-row-gap: #{$g * 1rem};
					}
				}
			}
			
			&-c{
				@for $g from 1 through 5{
					&-#{$g}{
						grid-column-gap: #{$g * 1%};
					}
				}
				
				@for $g from 1 through 100{
					&-#{$g}px{
						grid-column-gap: #{$g * 1px};
					}
				}
				
				@for $g from 1 through 15{
					&-#{$g}r{
						grid-column-gap: #{$g * 1rem};
					}
				}
			}
		}
	}
}

//* Tamanhos:
.w{
	@for $w from 1 through 18{
		$v: $w * 5;
		&#{$v}, &-#{$v}{
			width: #{$v * 1%};

			&-min{
				min-width: #{$v * 1%};
			}
			
			&-max{
				max-width: #{$v * 1%};
			}
			
			@for $p from 1 through 5{
				&-#{$p}{
					width: #{($v - $p - $p) * 1%};
					margin-left: #{$p * 1%};
					margin-right: #{$p * 1%};

					@include mix.responsive(){
						&:not(.ignore-breakpoint){
							width: 100%;
						}
					}
				}
			}
		}
	}

	&1\/3, &-33{
		width: 33%;

		@for $p from 1 through 5{
			&-#{$p}{
				width: #{(33 - $p - $p) * 1%};
				margin-left: #{$p * 1%};
				margin-right: #{$p * 1%};

				@include mix.responsive(){
					&:not(.ignore-breakpoint){
						width: 100%;
					}
				}
			}
		}

		&-min{
			min-width: 33%;
		}
		
		&-max{
			max-width: 33%;
		}
	}
	
	&2\/3, &-66{
		width: 66%;

		@for $p from 1 through 5{
			&-#{$p}{
				width: #{(66 - $p - $p) * 1%};
				margin-left: #{$p * 1%};
				margin-right: #{$p * 1%};

				@include mix.responsive(){
					&:not(.ignore-breakpoint){
						width: 100%;
					}
				}
			}
		}

		&-min{
			min-width: 66%;
		}
		
		&-max{
			max-width: 66%;
		}
	}
	
	@for $w from 1 through 20{
		&#{$w}r, &-#{$w}r{
			width: #{$w * 1rem};

			&-min{
				min-width: #{$w * 1rem};
			}
			
			&-max{
				max-width: #{$w * 1rem};
			}
			
			@for $p from 1 through 5{
				&-#{$p}{
					width: #{($w - $p) * 1rem};
					margin-left: #{$p * 1rem};
					margin-right: #{$p * 1rem};

					@include mix.responsive(){
						&:not(.ignore-breakpoint){
							width: 100%;
						}
					}
				}
			}
		}
	}
	
	@for $w from 1 through 60{
		$v: $w * 5;
		&#{$v}px, &-#{$v}px{
			width: #{$v * 1px};

			&-min{
				min-width: #{$v * 1px};
			}
			
			&-max{
				max-width: #{$v * 1px};
			}
			
			@for $p from 1 through 5{
				&-#{$p}{
					width: #{($v - $p) * 1px};
					margin-left: #{$p * 1px};
					margin-right: #{$p * 1px};

					@include mix.responsive(){
						&:not(.ignore-breakpoint){
							width: 100%;
						}
					}
				}
			}
		}
	}

	&-full, &100, &-100{
		width: 100%;
	}

	&-auto{
		width: auto!important;
	}
}

@include mix.responsive()
{
	.mob\:w{
		@for $w from 1 through 18{
			$v: $w * 5;
			&#{$v}, &-#{$v}{
				width: #{$v * 1%};

				&-min{
					min-width: #{$v * 1%};
				}
				
				&-max{
					max-width: #{$v * 1%};
				}
				
				@for $p from 1 through 5{
					&-#{$p}{
						width: #{($v - $p - $p) * 1%};
						margin-left: #{$p * 1%};
						margin-right: #{$p * 1%};

						@include mix.responsive(){
							&:not(.ignore-breakpoint){
								width: 100%;
							}
						}
					}
				}
			}
		}

		&1\/3, &-33{
			width: 33%;

			&-min{
				min-width: 33%;
			}
			
			&-max{
				max-width: 33%;
			}
		}
		
		&2\/3, &-66{
			width: 66%;

			&-min{
				min-width: 66%;
			}
			
			&-max{
				max-width: 66%;
			}
		}
		
		@for $w from 1 through 20{
			&#{$w}r, &-#{$w}r{
				width: #{$w * 1rem};

				&-min{
					min-width: #{$w * 1rem};
				}
				
				&-max{
					max-width: #{$w * 1rem};
				}
				
				@for $p from 1 through 5{
					&-#{$p}{
						width: #{($w - $p) * 1rem};
						margin-left: #{$p * 1rem};
						margin-right: #{$p * 1rem};

						@include mix.responsive(){
							&:not(.ignore-breakpoint){
								width: 100%;
							}
						}
					}
				}
			}
		}
		
		@for $w from 1 through 60{
			$v: $w * 5;
			&#{$v}px, &-#{$v}px{
				width: #{$v * 1px};

				&-min{
					min-width: #{$v * 1px};
				}
				
				&-max{
					max-width: #{$v * 1px};
				}
				
				@for $p from 1 through 5{
					&-#{$p}{
						width: #{($v - $p) * 1px};
						margin-left: #{$p * 1px};
						margin-right: #{$p * 1px};

						@include mix.responsive(){
							&:not(.ignore-breakpoint){
								width: 100%;
							}
						}
					}
				}
			}
		}

		&-full, &100, &-100{
			width: 100%;
		}

		&-auto{
			width: auto!important;
		}
	}
}

.h{
	@for $h from 1 through 18{
		$v: $h * 5;
		&#{$h}, &-#{$v}{
			height: #{$v * 1%};

			&-min{
				min-height: #{$v * 1%};
			}
			
			&-max{
				max-height: #{$v * 1%};
			}
			
			@for $p from 1 through 5{
				&-#{$p}{
					height: #{($v - $p - $p) * 1%};
					margin-top: #{$p * 1%};
					margin-bottom: #{$p * 1%};
				}
			}
		}
	}
	
	@for $h from 1 through 20{
		&#{$h}r, &-#{$h}r{
			height: #{$h * 1rem};

			&-min{
				min-height: #{$h * 1rem};
			}
			
			&-max{
				max-height: #{$h * 1rem};
			}
			
			@for $p from 1 through 5{
				&-#{$p}{
					height: #{($h - $p) * 1rem};
					margin-top: #{$p * 1rem};
					margin-bottom: #{$p * 1rem};
				}
			}
		}
	}
	
	@for $h from 1 through 60{
		$v: $h * 5;
		&#{$v}px, &-#{$v}px{
			height: #{$v * 1px};

			&-min{
				min-height: #{$v * 1px};
			}
			
			&-max{
				max-height: #{$v * 1px};
			}
			
			@for $p from 1 through 5{
				&-#{$p}{
					height: #{($v - $p) * 1px};
					margin-top: #{$p * 1px};
					margin-bottom: #{$p * 1px};
				}
			}
		}
	}

	&-full, &100, &-100{
		height: 100%;
	}

	&-auto{
		height: auto;
	}
}

@include mix.responsive()
{
	.mob\:h{
		@for $h from 1 through 18{
			$v: $h * 5;
			&#{$h}, &-#{$v}{
				height: #{$v * 1%};

				&-min{
					min-height: #{$v * 1%};
				}
				
				&-max{
					max-height: #{$v * 1%};
				}
				
				@for $p from 1 through 5{
					&-#{$p}{
						height: #{($v - $p - $p) * 1%};
						margin-top: #{$p * 1%};
						margin-bottom: #{$p * 1%};
					}
				}
			}
		}
		
		@for $h from 1 through 20{
			&#{$h}r, &-#{$h}r{
				height: #{$h * 1rem};

				&-min{
					min-height: #{$h * 1rem};
				}
				
				&-max{
					max-height: #{$h * 1rem};
				}
				
				@for $p from 1 through 5{
					&-#{$p}{
						height: #{($h - $p) * 1rem};
						margin-top: #{$p * 1rem};
						margin-bottom: #{$p * 1rem};
					}
				}
			}
		}
		
		@for $h from 1 through 60{
			$v: $h * 5;
			&#{$v}px, &-#{$v}px{
				height: #{$v * 1px};

				&-min{
					min-height: #{$v * 1px};
				}
				
				&-max{
					max-height: #{$v * 1px};
				}
				
				@for $p from 1 through 5{
					&-#{$p}{
						height: #{($v - $p) * 1px};
						margin-top: #{$p * 1px};
						margin-bottom: #{$p * 1px};
					}
				}
			}
		}

		&-full, &100, &-100{
			height: 100%;
		}

		&-auto{
			height: auto;
		}
	}
}

.border-box{
	box-sizing: border-box;
}

.content-box{
	box-sizing: content-box;
}

@include mix.responsive()
{
	.mob\:border-box{
		box-sizing: border-box;
	}

	.mob\:content-box{
		box-sizing: content-box;
	}
}

//* Vídeos e Imagens:
.iframe{
	&-16x9, &-16\/9{
		aspect-ratio: 16 / 9;
		width: 100%;
	}
	
	&-4x3, &-4\/3{
		aspect-ratio: 4 / 3;
		width: 100%;
	}
}

@include mix.responsive()
{
	.mob\:iframe{
		&-16x9, &-16\/9{
			aspect-ratio: 16 / 9;
			width: 100%;
		}
		
		&-4x3, &-4\/3{
			aspect-ratio: 4 / 3;
			width: 100%;
		}
	}
}

img{
	max-width:100%;

	&.fit{
		object-fit: fill;

		&-cover{
			object-fit: cover;
		}
		
		&-contain{
			object-fit: contain;
		}
		
		&-scale-down{
			object-fit: scale-down;
		}
	}
}

//* Transições:
.transition{
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;

	//? Tipos de transição:
	&-none{
		transition-property: none;
	}

	&-all{
		transition-property: all;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}
	
	&-colors{
		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}

	&-opacity{
		transition-property: opacity;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}
	
	&-shadow{
		transition-property: box-shadow;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}
	
	&-transform{
		transition-property: transform;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}
}

//? Durações e atrasos da transição
.duration{
	@for $d from 0 through 21{
		$v: $d * 50;

		&-#{$v}{
			transition-duration: #{$v}ms;
		}
	}
}

.delay{
	@for $d from 0 through 21{
		$v: $d * 50;

		&-#{$v}{
			transition-duration: #{$v}ms;
		}
	}
}

//? Função de tempo da transição
.ease{
	&-linear{
		transition-timing-function: linear;
	}
	
	&-in{
		transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
	}
	
	&-out{
		transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	}

	&-in-out{
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}
}

//* Escalas:
.scale{
	@for $s from 0 through 15{
		$cn: $s * 10;
		$v: calc($cn / 100);
		
		&-#{$cn}{
			transform: scale(#{$v});
		
			&-neg{
				transform: scale(-#{$v});
			}
		}

	}
}

//* Opacidade:
.opacity{
	@for $o from 0 through 10{
		$cn: $o * 10;
		$v: calc($cn / 100);
		
		&-#{$cn}{
			opacity: #{$v};
		}
	}
}

//* Rotações:
.rotate{
	@for $s from 0 through 20{
		$v: $s * 5;
		
		&-#{$v}{
			transform: rotate(#{$v});
		
			&-neg{
				transform: rotate(-#{$v});
			}
		}

	}
}

//* Translações:
.translate{
	@for $t from 0 through 20{
		$v: $t * 5;

		&-x-#{$v}{
			transform: translateX(#{$v * 1%});

			&-neg{
				transform: translateX(-#{$v * 1%});
			}
		}
		
		&-y-#{$v}{
			transform: translateY(#{$v * 1%});

			&-neg{
				transform: translateY(-#{$v * 1%});
			}
		}
	}

	&-x-1\/3, &-x-33{
		transform: translateX(33%);

		&-neg{
			transform: translateX(-33%);
		}
	}
	
	&-y-1\/3, &-y-33{
		transform: translateY(33%);

		&-neg{
			transform: translateY(-33%);
		}
	}
	
	&-x-2\/3, &-x-66{
		transform: translateX(66%);

		&-neg{
			transform: translateX(-66%);
		}
	}
	
	&-y-2\/3, &-y-66{
		transform: translateY(66%);

		&-neg{
			transform: translateY(-66%);
		}
	}
	
	&-x-1\/2{
		transform: translateX(50%);

		&-neg{
			transform: translateX(-50%);
		}
	}
	
	&-y-1\/2{
		transform: translateY(50%);

		&-neg{
			transform: translateY(-50%);
		}
	}

	&-x-100, &-x-full{
		transform: translateX(100%);

		&-neg{
			transform: translateX(-100%);
		}
	}
	
	&-y-100, &-y-full{
		transform: translateY(100%);

		&-neg{
			transform: translateY(-100%);
		}
	}

	@for $t from 0 through 20{
		&-x-#{$t}r{
			transform: translateX(#{$t * 1rem});

			&-neg{
				transform: translateX(-#{$t * 1rem});
			}
		}
		
		&-y-#{$t}r{
			transform: translateY(#{$t * 1rem});

			&-neg{
				transform: translateY(-#{$t * 1rem});
			}
		}
	}

	@for $t from 0 through 20{
		&-x-#{$t}px{
			transform: translateX(#{$t * 1px});

			&-neg{
				transform: translateX(-#{$t * 1px});
			}
		}
		
		&-y-#{$t}px{
			transform: translateY(#{$t * 1px});

			&-neg{
				transform: translateY(-#{$t * 1px});
			}
		}
	}

}

//* Float:
.float{
	&-left{
		float: left;
	}
	
	&-right{
		float: right;
	}

	&-none{
		float: none;
	}
}

@include mix.responsive()
{
	.mob\:float{
		&-left{
			float: left;
		}
		
		&-right{
			float: right;
		}

		&-none{
			float: none;
		}
	}
}

.clear{
	clear: both;
}

//* Responsivo:
.container{
	&-normal	{container-type: normal;}
	&-inline	{container-type: inline-size;}
	&-size		{container-type: size;}
}

/* Classes que ocultam conteudo pelo tipo de tela: */
@media (min-width: 1024px)
{
	.mobile{
		display: none!important;
	}
}

@media (min-width: 0px) and (max-width: 1023px)
{
	.desktop{
		display: none!important;
	}
}
